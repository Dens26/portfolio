---
import Card from "./Card.astro";

interface Service {
  id: number;
  title: string;
  price: number;
  benefits: string[];
  hostingPrice: number; // Ajout de l'attribut pour le prix d'hébergement
  hostingDescription: string[]; // Ajout de la description de l'hébergement
}

interface Props {
  service: Service;
}

const { id, title, benefits, price, hostingPrice, hostingDescription } = Astro.props.service;
---

<div class="flex justify-center items-center w-full mx-2">
  <Card className="card-service h-full w-full flex flex-col">
    <div class="flex flex-col gap-2 flex-grow">
      <h3 class="text-xl text-gray-950 dark:text-gray-100 font-semibold mb-4">
        {title}
      </h3>
      <p class="font-bold text-2xl text-gray-950 dark:text-white">A partir de {price}€</p>
      
      <!-- Affichage des bénéfices -->
      <ul class="text-gray-600 dark:text-gray-400 list-inside list-disc mb-4">
        {benefits.map((benefit) => <li>{benefit}</li>)}
      </ul>
      
      <!-- Affichage de l'option d'hébergement -->
      <div class="mt-4">
        <p class="font-semibold text-lg text-gray-950 dark:text-white">Hébergement : A partir de {hostingPrice}€/an</p>
        <ul class="text-gray-600 dark:text-gray-400 text-sm">
          {hostingDescription.map((description) => <li class="mb-2">{description}</li>)}
        </ul>
      </div>
    </div>
    <button
      data-service-id={id}
      class="hireServiceButton w-full p-2 text-white font-semibold bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 focus:ring-4 focus:outline-hidden focus:ring-blue-300 rounded-md dark:bg-blue-700 dark:hover:bg-blue-800 dark:focus:ring-blue-950 transition-all duration-300"
    >
      Demande d'informations
    </button>
  </Card>
</div>




